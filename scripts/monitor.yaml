version: '3'

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
  
  %{ if enable_proxy }
  traefik:
    image: ${traefik_image}
    container_name: traefik
    user: root
    restart: always
    ports:
      - 80:80
      - 443:443
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${acme_email}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /server/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
  %{ endif }

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: root
    volumes:
      - /server/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /server/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
  
  grafana:
    image: grafana/grafana-enterprise:latest
    restart: unless-stopped
    user: root
    ports:
      - 3000:3000
    volumes:
      - /server/grafana/data:/var/lib/grafana
    %{ if enable_proxy }
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.grafana.middlewares=redirectscheme"
      - "traefik.http.routers.grafana.rule=Host(`${domain}`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana-https.rule=Host(`${domain}`)"
      - "traefik.http.routers.grafana-https.entrypoints=websecure"
      - "traefik.http.routers.grafana-https.tls.certresolver=myresolver"
    %{ endif }